
> dota@0.0.1 start
> node ./bin/script/server.js aws:env

Initializing S3Storage
Initializing RedisManager with config type: redis
No REDIS_HOST or REDIS_PORT environment variable configured.
API listening at http://localhost:3010
(node:16289) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
(Use `node --trace-warnings ...` to show where the warning was created)
Database "codepushdb" ensured.
Executing (default): SELECT 1+1 AS result
Models registered
Sequelize models synced
{
  tenant: tenant,
  package: package,
  deployment: deployment,
  account: account,
  accessKey: accessKey,
  AppPointer: AppPointer,
  collaborator: collaborator,
  apps: apps
}
Executing (default): SELECT `id`, `name`, `key`, `packageId`, `appId`, `createdTime`, `createdAt`, `updatedAt` FROM `deployments` AS `deployment` WHERE `deployment`.`key` = 'O25dwjupnmTCC-q70qC1CzWfO73NkSR75brivk' LIMIT 1;
Executing (default): SELECT `id`, `appVersion`, `blobUrl`, `description`, `diffPackageMap`, `isDisabled`, `isMandatory`, `label`, `manifestBlobUrl`, `originalDeployment`, `originalLabel`, `packageHash`, `releasedBy`, `releaseMethod`, `rollout`, `size`, `uploadTime`, `deploymentId`, `createdAt`, `updatedAt` FROM `packages` AS `package` WHERE `package`.`deploymentId` = 'id_5' ORDER BY `package`.`uploadTime` ASC;
Executing (default): SELECT `id`, `name`, `key`, `packageId`, `appId`, `createdTime`, `createdAt`, `updatedAt` FROM `deployments` AS `deployment` WHERE `deployment`.`key` = 'O25dwjupnmTCC-q70qC1CzWfO73NkSR75brivk' LIMIT 1;
Executing (default): SELECT `id`, `appVersion`, `blobUrl`, `description`, `diffPackageMap`, `isDisabled`, `isMandatory`, `label`, `manifestBlobUrl`, `originalDeployment`, `originalLabel`, `packageHash`, `releasedBy`, `releaseMethod`, `rollout`, `size`, `uploadTime`, `deploymentId`, `createdAt`, `updatedAt` FROM `packages` AS `package` WHERE `package`.`deploymentId` = 'id_5' ORDER BY `package`.`uploadTime` ASC;
